spring:
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
    loadbalancer:
      retry:
        enabled: true
zuul:
  host:
    connect-timeout-millis: 10000
    socket-timeout-millis: 60000
  #/oauth/token需要请求头处理
  sensitive-headers:
  ignored-headers: Access-Control-Allow-Credentials,Access-Control-Allow-Origin,Access-Control-Allow-Methods
  add-host-header: true
  routes:
    mss-auth:
      sensitiveHeaders:
      path: /mss-oauth/*
      service-id: mss-oauth
      strip-prefix: true
      custom-sensitive-headers: true

# 针对资源的直接使用http的处理请求方式， 重新userDetailsService接口，进行资源的权限认证。
# mss-oauth 是注册到nacos中的服务名称，需要获取用户Authentication的信息
security:
  oauth2:
    resource:
      user-info-uri:  http://mss-oauth/user
#      user-info-uri:  http://127.0.0.1:9060/user  # 可以使用nginx负载，也可以直接使用上面的，还可以直接使用某一个服务的接口调用
      prefer-token-info: false
      loadBalanced: true
##############end#####################
####超时配置####
ribbon:
  ReadTimeout: 10000
  ConnectTimeout: 10000
  MaxAutoRetries: 1
  MaxAutoRetriesNextServer: 2
  eureka:
    enabled: true
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 600000
###超时配置###

